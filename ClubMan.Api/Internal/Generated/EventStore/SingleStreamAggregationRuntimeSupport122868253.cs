// <auto-generated/>
#pragma warning disable
using Marten;
using Marten.Events.Aggregation;
using Marten.Internal.Storage;
using System;
using System.Linq;

namespace Marten.Generated.EventStore
{
    // START: SingleStreamAggregationLiveAggregation122868253
    public class SingleStreamAggregationLiveAggregation122868253 : Marten.Events.Aggregation.SyncLiveAggregatorBase<ClubMan.Shared.Model.VisitasInvitado>
    {
        private readonly Marten.Events.Aggregation.SingleStreamAggregation<ClubMan.Shared.Model.VisitasInvitado> _singleStreamAggregation;

        public SingleStreamAggregationLiveAggregation122868253(Marten.Events.Aggregation.SingleStreamAggregation<ClubMan.Shared.Model.VisitasInvitado> singleStreamAggregation)
        {
            _singleStreamAggregation = singleStreamAggregation;
        }


        public System.Action<ClubMan.Shared.Model.VisitasInvitado, ClubMan.Shared.Events.VisitaInvitadoRegistradaEvent> Lambda1 {get; set;}


        public override ClubMan.Shared.Model.VisitasInvitado Build(System.Collections.Generic.IReadOnlyList<Marten.Events.IEvent> events, Marten.IQuerySession session, ClubMan.Shared.Model.VisitasInvitado snapshot)
        {
            if (!events.Any()) return null;
            ClubMan.Shared.Model.VisitasInvitado visitasInvitado = null;
            snapshot ??= Create(events[0], session);
            foreach (var @event in events)
            {
                snapshot = Apply(@event, snapshot, session);
            }

            return snapshot;
        }


        public ClubMan.Shared.Model.VisitasInvitado Create(Marten.Events.IEvent @event, Marten.IQuerySession session)
        {
            return new ClubMan.Shared.Model.VisitasInvitado();
        }


        public ClubMan.Shared.Model.VisitasInvitado Apply(Marten.Events.IEvent @event, ClubMan.Shared.Model.VisitasInvitado aggregate, Marten.IQuerySession session)
        {
            switch (@event)
            {
                case Marten.Events.IEvent<ClubMan.Shared.Events.VisitaInvitadoRegistradaEvent> event_VisitaInvitadoRegistradaEvent9:
                    Lambda1.Invoke(aggregate, event_VisitaInvitadoRegistradaEvent9.Data);
                    break;
            }

            return aggregate;
        }

    }

    // END: SingleStreamAggregationLiveAggregation122868253
    
    
    // START: SingleStreamAggregationInlineHandler122868253
    public class SingleStreamAggregationInlineHandler122868253 : Marten.Events.Aggregation.AggregationRuntime<ClubMan.Shared.Model.VisitasInvitado, string>
    {
        private readonly Marten.IDocumentStore _store;
        private readonly Marten.Events.Aggregation.IAggregateProjection _projection;
        private readonly Marten.Events.Aggregation.IEventSlicer<ClubMan.Shared.Model.VisitasInvitado, string> _slicer;
        private readonly Marten.Internal.Storage.IDocumentStorage<ClubMan.Shared.Model.VisitasInvitado, string> _storage;
        private readonly Marten.Events.Aggregation.SingleStreamAggregation<ClubMan.Shared.Model.VisitasInvitado> _singleStreamAggregation;

        public SingleStreamAggregationInlineHandler122868253(Marten.IDocumentStore store, Marten.Events.Aggregation.IAggregateProjection projection, Marten.Events.Aggregation.IEventSlicer<ClubMan.Shared.Model.VisitasInvitado, string> slicer, Marten.Internal.Storage.IDocumentStorage<ClubMan.Shared.Model.VisitasInvitado, string> storage, Marten.Events.Aggregation.SingleStreamAggregation<ClubMan.Shared.Model.VisitasInvitado> singleStreamAggregation) : base(store, projection, slicer, storage)
        {
            _store = store;
            _projection = projection;
            _slicer = slicer;
            _storage = storage;
            _singleStreamAggregation = singleStreamAggregation;
        }


        public System.Action<ClubMan.Shared.Model.VisitasInvitado, ClubMan.Shared.Events.VisitaInvitadoRegistradaEvent> Lambda1 {get; set;}


        public override async System.Threading.Tasks.ValueTask<ClubMan.Shared.Model.VisitasInvitado> ApplyEvent(Marten.IQuerySession session, Marten.Events.Projections.EventSlice<ClubMan.Shared.Model.VisitasInvitado, string> slice, Marten.Events.IEvent evt, ClubMan.Shared.Model.VisitasInvitado aggregate, System.Threading.CancellationToken cancellationToken)
        {
            switch (evt)
            {
                case Marten.Events.IEvent<ClubMan.Shared.Events.VisitaInvitadoRegistradaEvent> event_VisitaInvitadoRegistradaEvent10:
                    aggregate ??= new ClubMan.Shared.Model.VisitasInvitado();
                    Lambda1.Invoke(aggregate, event_VisitaInvitadoRegistradaEvent10.Data);
                    return aggregate;
            }

            return aggregate;
        }


        public ClubMan.Shared.Model.VisitasInvitado Create(Marten.Events.IEvent @event, Marten.IQuerySession session)
        {
            return new ClubMan.Shared.Model.VisitasInvitado();
        }

    }

    // END: SingleStreamAggregationInlineHandler122868253
    
    
}

