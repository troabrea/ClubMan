// <auto-generated />
using System;
using ClubMan.WebApi.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ClubMan.WebApi.Migrations
{
    [DbContext(typeof(ClubManContext))]
    [Migration("20221230135748_AddedMenuUrlString")]
    partial class AddedMenuUrlString
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ClubMan.Shared.Model.Actividad", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DetalleUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaHora")
                        .HasColumnType("datetime2");

                    b.Property<int>("Horas")
                        .HasColumnType("int");

                    b.Property<string>("ImagenUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("InstalacionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Publicado")
                        .HasColumnType("bit");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titulo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InstalacionId");

                    b.ToTable("Actividad", (string)null);
                });

            modelBuilder.Entity("ClubMan.Shared.Model.Carnet", b =>
                {
                    b.Property<string>("CarnetId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Desde")
                        .HasColumnType("datetime2");

                    b.Property<int>("DiasValidez")
                        .HasColumnType("int");

                    b.Property<int>("Estatus")
                        .HasColumnType("int");

                    b.Property<string>("FotoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroIdentidad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ReferenciaId")
                        .HasColumnType("bigint");

                    b.Property<long>("SocioId")
                        .HasColumnType("bigint");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("CarnetId");

                    b.HasIndex("SocioId");

                    b.ToTable("Carnet", (string)null);
                });

            modelBuilder.Entity("ClubMan.Shared.Model.Empresa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Facebook")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Instagram")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LogoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mision")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimaryColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecondaryColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SobreNosotros")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelefonoAdicional")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vision")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WhatsApp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Youtube")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Empresa", (string)null);
                });

            modelBuilder.Entity("ClubMan.Shared.Model.EventoDeSocio", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Estatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaHora")
                        .HasColumnType("datetime2");

                    b.Property<int>("Horas")
                        .HasColumnType("int");

                    b.Property<Guid>("InstalacionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MovimientoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Personas")
                        .HasColumnType("int");

                    b.Property<long>("SocioId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("InstalacionId");

                    b.HasIndex("SocioId");

                    b.ToTable("EventoDeSocio", (string)null);
                });

            modelBuilder.Entity("ClubMan.Shared.Model.Instalacion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<int>("Capacidad")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagenUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LocalidadId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MenuUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Reservable")
                        .HasColumnType("bit");

                    b.Property<string>("Titulo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LocalidadId");

                    b.ToTable("Instalacion", (string)null);
                });

            modelBuilder.Entity("ClubMan.Shared.Model.InvitacionDeSocio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Estatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaHora")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaHoraVisita")
                        .HasColumnType("datetime2");

                    b.Property<string>("NombreCompleto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroCarnet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroIdentidad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("SocioId")
                        .HasColumnType("bigint");

                    b.Property<string>("WhatsApp")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SocioId");

                    b.ToTable("InvitacionDeSocio", (string)null);
                });

            modelBuilder.Entity("ClubMan.Shared.Model.Localidad", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Latitud")
                        .HasColumnType("float");

                    b.Property<double>("Longitud")
                        .HasColumnType("float");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Orden")
                        .HasColumnType("int");

                    b.Property<bool>("Publicado")
                        .HasColumnType("bit");

                    b.Property<bool>("SoloOficina")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Localidad", (string)null);
                });

            modelBuilder.Entity("ClubMan.Shared.Model.Mensaje", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Contenido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DetalleUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Enviado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("Titulo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Mensaje", (string)null);
                });

            modelBuilder.Entity("ClubMan.Shared.Model.MovimientoSocio", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Comentario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("DependienteId")
                        .HasColumnType("bigint");

                    b.Property<int>("Estatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaRevision")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nota")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ReferenciaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RegistradaPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RevisadoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("SocioId")
                        .HasColumnType("bigint");

                    b.Property<int>("TipoMovimiento")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SocioId");

                    b.ToTable("MovimientoSocio", (string)null);
                });

            modelBuilder.Entity("ClubMan.Shared.Model.Noticia", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Autor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contenido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DetalleUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImagenUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Publicado")
                        .HasColumnType("bit");

                    b.Property<string>("Resumen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titulo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Noticia", (string)null);
                });

            modelBuilder.Entity("ClubMan.Shared.Model.Politica", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AntiguedadParaHonorifico")
                        .HasColumnType("int");

                    b.Property<int>("AntiguedadParaHonorificoPropietario")
                        .HasColumnType("int");

                    b.Property<int>("CuotasParaPasividad")
                        .HasColumnType("int");

                    b.Property<int>("DiasMembresiaHuesped")
                        .HasColumnType("int");

                    b.Property<int>("EdadParaHonorifico")
                        .HasColumnType("int");

                    b.Property<int>("EdadParaHonorificoPropietario")
                        .HasColumnType("int");

                    b.Property<int>("EntradasNoResidentes")
                        .HasColumnType("int");

                    b.Property<int>("InvitadosPorDia")
                        .HasColumnType("int");

                    b.Property<int>("LimiteHuespedes")
                        .HasColumnType("int");

                    b.Property<int>("MenoriaDeEdad")
                        .HasColumnType("int");

                    b.Property<int>("VisitasAlMesInvitados")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Politica", (string)null);
                });

            modelBuilder.Entity("ClubMan.Shared.Model.Pregunta", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Orden")
                        .HasColumnType("float");

                    b.Property<bool>("Publicado")
                        .HasColumnType("bit");

                    b.Property<string>("Resumen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titulo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Pregunta", (string)null);
                });

            modelBuilder.Entity("ClubMan.Shared.Model.Servicio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Categoria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Horario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Orden")
                        .HasColumnType("int");

                    b.Property<bool>("Publicado")
                        .HasColumnType("bit");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titulo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Servicio", (string)null);
                });

            modelBuilder.Entity("ClubMan.Shared.Model.Socio", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Celular")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ciudad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DireccionTrabajo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailAsitente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailTrabajo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Empresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstadoCivil")
                        .HasColumnType("int");

                    b.Property<int>("EstatusMembresia")
                        .HasColumnType("int");

                    b.Property<string>("Fax")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaMembresia")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("FotoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LugarTrabajo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nacionalidad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreAsistente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroCarnet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroFiscal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroIdentidad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pais")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Posicion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sector")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sexo")
                        .HasColumnType("int");

                    b.Property<long>("SolicitudId")
                        .HasColumnType("bigint");

                    b.Property<string>("TelefonoFlota")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelefonoOficina")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelefonoResidencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoSocio")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Socio", (string)null);
                });

            modelBuilder.Entity("ClubMan.Shared.Model.Solicitud", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Beneficiario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Celular")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ciudad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DireccionTrabajo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailAsitente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailTrabajo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstadoCivil")
                        .HasColumnType("int");

                    b.Property<int>("EstatusSolicitud")
                        .HasColumnType("int");

                    b.Property<string>("Fax")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaSolicitud")
                        .HasColumnType("datetime2");

                    b.Property<string>("FotoSocioUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LugarTrabajo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nacionalidad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreAsistente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroFiscal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroIdentidad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pais")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Posición")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sector")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sexo")
                        .HasColumnType("int");

                    b.Property<string>("Solicitante")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SolicitudPdfUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelefonoFlota")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelefonoOficina")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelefonoResidencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoSocio")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UltimaRevision")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UltimoSometimiento")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Solcitud", (string)null);
                });

            modelBuilder.Entity("ClubMan.Shared.Model.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("ClaveHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaveSalt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rol")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.ToTable("Usuario", (string)null);
                });

            modelBuilder.Entity("ClubMan.Shared.Model.Visitas", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Adicionales")
                        .HasColumnType("int");

                    b.Property<int>("Ano")
                        .HasColumnType("int");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("Dependientes")
                        .HasColumnType("int");

                    b.Property<int>("Huespedes")
                        .HasColumnType("int");

                    b.Property<int>("Invitados")
                        .HasColumnType("int");

                    b.Property<int>("Mes")
                        .HasColumnType("int");

                    b.Property<int>("Socios")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Visitas", (string)null);
                });

            modelBuilder.Entity("ClubMan.Shared.Model.VisitasInvitado", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Ano")
                        .HasColumnType("int");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("Mes")
                        .HasColumnType("int");

                    b.Property<string>("NumeroIdentidad")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("NumeroIdentidad");

                    b.ToTable("VisitasInvitado", (string)null);
                });

            modelBuilder.Entity("ClubMan.Shared.Model.VisitasSocio", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Ano")
                        .HasColumnType("int");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("CantidadAdicionales")
                        .HasColumnType("int");

                    b.Property<int>("CantidadDependientes")
                        .HasColumnType("int");

                    b.Property<int>("CantidadHuespedes")
                        .HasColumnType("int");

                    b.Property<int>("CantidadInvitados")
                        .HasColumnType("int");

                    b.Property<int>("CantidadPrincipal")
                        .HasColumnType("int");

                    b.Property<int>("Mes")
                        .HasColumnType("int");

                    b.Property<long>("SocioId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("SocioId");

                    b.ToTable("VisitasSocio", (string)null);
                });

            modelBuilder.Entity("ClubMan.Shared.Model.Actividad", b =>
                {
                    b.HasOne("ClubMan.Shared.Model.Instalacion", null)
                        .WithMany()
                        .HasForeignKey("InstalacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ClubMan.Shared.Model.Carnet", b =>
                {
                    b.HasOne("ClubMan.Shared.Model.Socio", null)
                        .WithMany()
                        .HasForeignKey("SocioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ClubMan.Shared.Model.EventoDeSocio", b =>
                {
                    b.HasOne("ClubMan.Shared.Model.Instalacion", null)
                        .WithMany()
                        .HasForeignKey("InstalacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClubMan.Shared.Model.Socio", null)
                        .WithMany()
                        .HasForeignKey("SocioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsMany("ClubMan.Shared.Model.InvitadoEvento", "Invitados", b1 =>
                        {
                            b1.Property<long>("EventoDeSocioId")
                                .HasColumnType("bigint");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"), 1L, 1);

                            b1.Property<string>("Nombre")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("NumeroIdentidad")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("EventoDeSocioId", "Id");

                            b1.ToTable("InvitadoEvento");

                            b1.WithOwner()
                                .HasForeignKey("EventoDeSocioId");
                        });

                    b.Navigation("Invitados");
                });

            modelBuilder.Entity("ClubMan.Shared.Model.Instalacion", b =>
                {
                    b.HasOne("ClubMan.Shared.Model.Localidad", null)
                        .WithMany()
                        .HasForeignKey("LocalidadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ClubMan.Shared.Model.InvitacionDeSocio", b =>
                {
                    b.HasOne("ClubMan.Shared.Model.Socio", null)
                        .WithMany()
                        .HasForeignKey("SocioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ClubMan.Shared.Model.MovimientoSocio", b =>
                {
                    b.HasOne("ClubMan.Shared.Model.Socio", null)
                        .WithMany()
                        .HasForeignKey("SocioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ClubMan.Shared.Model.Socio", b =>
                {
                    b.OwnsMany("ClubMan.Shared.Model.AdicionalSocio", "Adicionales", b1 =>
                        {
                            b1.Property<long>("SocioId")
                                .HasColumnType("bigint");

                            b1.Property<long>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bigint");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<long>("Id"), 1L, 1);

                            b1.Property<string>("Descripcion")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int>("Estatus")
                                .HasColumnType("int");

                            b1.Property<string>("FotoUrl")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<Guid>("MovimientoId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Nombre")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("NumeroIdentidad")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Observaciones")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int>("TipoAdicional")
                                .HasColumnType("int");

                            b1.HasKey("SocioId", "Id");

                            b1.ToTable("AdicionalSocio");

                            b1.WithOwner()
                                .HasForeignKey("SocioId");
                        });

                    b.OwnsMany("ClubMan.Shared.Model.DependienteSocio", "Dependientes", b1 =>
                        {
                            b1.Property<long>("SocioId")
                                .HasColumnType("bigint");

                            b1.Property<long>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bigint");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<long>("Id"), 1L, 1);

                            b1.Property<string>("Celular")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("DireccionTrabajo")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Email")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int>("Estatus")
                                .HasColumnType("int");

                            b1.Property<DateTime>("FechaNacimiento")
                                .HasColumnType("datetime2");

                            b1.Property<string>("FotoUrl")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("LugarTrabajo")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<Guid>("MovimientoId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Nacionalidad")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Nombre")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("NumeroCarnet")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("NumeroIdentidad")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Posicion")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int>("Sexo")
                                .HasColumnType("int");

                            b1.Property<string>("TelefonoTrabajo")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int>("TipoDependiente")
                                .HasColumnType("int");

                            b1.HasKey("SocioId", "Id");

                            b1.ToTable("DependienteSocio");

                            b1.WithOwner()
                                .HasForeignKey("SocioId");
                        });

                    b.OwnsMany("ClubMan.Shared.Model.HuespedSocio", "Huespededes", b1 =>
                        {
                            b1.Property<long>("SocioId")
                                .HasColumnType("bigint");

                            b1.Property<long>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bigint");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<long>("Id"), 1L, 1);

                            b1.Property<DateTime>("Desde")
                                .HasColumnType("datetime2");

                            b1.Property<int>("Estatus")
                                .HasColumnType("int");

                            b1.Property<string>("FotoUrl")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime>("Hasta")
                                .HasColumnType("datetime2");

                            b1.Property<Guid>("MovimientoId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Nombre")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("NumeroCarnet")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("NumeroIdentidad")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Parentesco")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("SocioId", "Id");

                            b1.ToTable("HuespedSocio");

                            b1.WithOwner()
                                .HasForeignKey("SocioId");
                        });

                    b.OwnsMany("ClubMan.Shared.Model.Embarcacion", "Embarcaciones", b1 =>
                        {
                            b1.Property<long>("SocioId")
                                .HasColumnType("bigint");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"), 1L, 1);

                            b1.Property<double>("Eslora")
                                .HasColumnType("float");

                            b1.Property<string>("Localizacion")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<double>("Manga")
                                .HasColumnType("float");

                            b1.Property<string>("Marca")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Nombre")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Tipo")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("SocioId", "Id");

                            b1.ToTable("Socio_Embarcaciones");

                            b1.WithOwner()
                                .HasForeignKey("SocioId");
                        });

                    b.Navigation("Adicionales");

                    b.Navigation("Dependientes");

                    b.Navigation("Embarcaciones");

                    b.Navigation("Huespededes");
                });

            modelBuilder.Entity("ClubMan.Shared.Model.Solicitud", b =>
                {
                    b.OwnsMany("ClubMan.Shared.Model.Dependiente", "Dependientes", b1 =>
                        {
                            b1.Property<long>("SolicitudId")
                                .HasColumnType("bigint");

                            b1.Property<Guid>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Celular")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("DireccionTrabajo")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Email")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime>("FechaNacimiento")
                                .HasColumnType("datetime2");

                            b1.Property<string>("FotoUrl")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("LugarTrabajo")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Nacionalidad")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Nombre")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("NumeroIndentidad")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Posicion")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int>("Sexo")
                                .HasColumnType("int");

                            b1.Property<string>("TelefonoTrabajo")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int>("TipoDependiente")
                                .HasColumnType("int");

                            b1.HasKey("SolicitudId", "Id");

                            b1.ToTable("Dependiente");

                            b1.WithOwner()
                                .HasForeignKey("SolicitudId");
                        });

                    b.OwnsMany("ClubMan.Shared.Model.MembresiaAlterna", "MembresiasAlternas", b1 =>
                        {
                            b1.Property<long>("SolicitudId")
                                .HasColumnType("bigint");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"), 1L, 1);

                            b1.Property<DateTime>("MiembroDesde")
                                .HasColumnType("datetime2");

                            b1.Property<string>("NombreClub")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("SolicitudId", "Id");

                            b1.ToTable("MembresiaAlterna");

                            b1.WithOwner()
                                .HasForeignKey("SolicitudId");
                        });

                    b.OwnsMany("ClubMan.Shared.Model.ReferenciaBancaria", "ReferenciasBancarias", b1 =>
                        {
                            b1.Property<long>("SolicitudId")
                                .HasColumnType("bigint");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"), 1L, 1);

                            b1.Property<string>("Banco")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("NumeroDeCuenta")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("OficialCuenta")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("SolicitudId", "Id");

                            b1.ToTable("ReferenciaBancaria");

                            b1.WithOwner()
                                .HasForeignKey("SolicitudId");
                        });

                    b.OwnsMany("ClubMan.Shared.Model.Revision", "Revisiones", b1 =>
                        {
                            b1.Property<long>("SolicitudId")
                                .HasColumnType("bigint");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"), 1L, 1);

                            b1.Property<int>("CantidadAcciones")
                                .HasColumnType("int");

                            b1.Property<string>("CompletadaPor")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int>("EstatusRevision")
                                .HasColumnType("int");

                            b1.Property<DateTime>("FechaRevision")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime>("FechaSometida")
                                .HasColumnType("datetime2");

                            b1.Property<string>("NumeroAprobacion")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Observaciones")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("SometidaPor")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<decimal>("Valoracciones")
                                .HasColumnType("decimal(18,2)");

                            b1.HasKey("SolicitudId", "Id");

                            b1.ToTable("Revision");

                            b1.WithOwner()
                                .HasForeignKey("SolicitudId");
                        });

                    b.OwnsMany("ClubMan.Shared.Model.SocioSecundador", "SociosSecundadores", b1 =>
                        {
                            b1.Property<long>("SolicitudId")
                                .HasColumnType("bigint");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"), 1L, 1);

                            b1.Property<string>("NombreSocio")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("NumeroSocio")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("SolicitudId", "Id");

                            b1.ToTable("SocioSecundador");

                            b1.WithOwner()
                                .HasForeignKey("SolicitudId");
                        });

                    b.OwnsMany("ClubMan.Shared.Model.Embarcacion", "Embarcaciones", b1 =>
                        {
                            b1.Property<long>("SolicitudId")
                                .HasColumnType("bigint");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"), 1L, 1);

                            b1.Property<double>("Eslora")
                                .HasColumnType("float");

                            b1.Property<string>("Localizacion")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<double>("Manga")
                                .HasColumnType("float");

                            b1.Property<string>("Marca")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Nombre")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Tipo")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("SolicitudId", "Id");

                            b1.ToTable("Solcitud_Embarcaciones");

                            b1.WithOwner()
                                .HasForeignKey("SolicitudId");
                        });

                    b.Navigation("Dependientes");

                    b.Navigation("Embarcaciones");

                    b.Navigation("MembresiasAlternas");

                    b.Navigation("ReferenciasBancarias");

                    b.Navigation("Revisiones");

                    b.Navigation("SociosSecundadores");
                });

            modelBuilder.Entity("ClubMan.Shared.Model.Usuario", b =>
                {
                    b.HasOne("ClubMan.Shared.Model.Empresa", null)
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ClubMan.Shared.Model.VisitasSocio", b =>
                {
                    b.HasOne("ClubMan.Shared.Model.Socio", null)
                        .WithMany()
                        .HasForeignKey("SocioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
